####################
# Short Term To Do #
####################

* Swap dict_new() parameters.
* Adjustable sensitivity (set value used by FPN_IS_ZERO).
* Smart verbose prints.
	* Don't print matrices above a certain size.  Just info.
* Add optimizations to the Makefile.

############
# Planning #
############

Parallelization Modes:
	* Auto
	* OpenMP
	* pthreads
	* OpenMPI
	* OpenCL
	* OpenMPI + OpenCL
	* none (DONE)

Decomposition Modes:
	* Spatial
	* Task

Matrix Implementations:
	* Custom (DONE)
	* LAPACK & BLAS

Execution Modes:
	* Initialize Only
	* Solve
		* Minimize
		* Maximize

Output Options:
	* Verbose (DONE)
	* Very Verbose (DONE)
	* Convert
	* Output File
	* Show Stats

Stats:
	* Max Memory Used
	* Current Memory Used
	* Elapsed Time
	* Vertices Visited

Memory Allocators:
	* StreamFlow
	* Standard Malloc
	* tcmalloc
	* jemalloc

#################
# Scratch Space #
#################

* Set up global Bloom filter

* Set up workers
	* Peg worker to core
	* Work queues

* pthreads kernel
	* Insert initial dictionary w/ entering and leaving work units
	* Wait for a worker to find a final dictionary

* Workers
	* Final dictionary is placed into a global pointer
	* Remaining dictionaries on queues are freed
